"""
(№ 7619) *(М. Шагитов, П. Хаматов) У исполнителя Калькулятор имеются две команды, 
которые обозначены латинскими буквами:
A. Прибавить 1
B. Прибавить сумму всех делителей
Первая команда увеличивает число на 1, вторая – увеличивает число на сумму всех его 
натуральных делителей (включая 1 и само число). Сколько существует программ, для которых 
при исходном числе 2 результатом является число 62?
"""

# from math import sqrt

# def divs(x):
#     d =[]
#     for i in range(1, int(sqrt(x)+1)):
#         if x%i == 0:
#             d.append(x//i,i)

#     return d

# def f(b, e):
#     if b == e: return 1
#     if b > e: return 0
    
#     return f(b + 1, e) + f(b + sum(divs(b)), e)

# print( f(2,18) )

"""
У исполнителя Калькулятор имеются три команды, которые обозначены латинскими буквами:
А. Прибавить 2
B. Прибавить 3
C. Умножить на 4
Программа для исполнителя – это последовательность команд, каждая из которых изменяет число. Найдите количество программ, 
для которых при исходном числе 1 результатом является число 50, и при этом запрещено использование команды А сразу после команды С.
"""

# def f(b, e, history):
#     if b == e: return 1
#     if b > e or 'CA' in history: return 0
#     return f(b+2, e, history+'A') + f(b+3, e, history+'B') + f(b*4, e, history+'C')

# print( f(1, 50, '') )

"""
У исполнителя Калькулятор имеются три команды, которые обозначены латинскими буквами:
А. Прибавь 1
B. Прибавь младшую цифру
C. Прибавь старшую цифру
Программа для исполнителя – это последовательность команд, каждая из которых изменяет число. Сколько существует программ c разными траекториями, 
для которых при исходном числе 82 результатом является число 124, и при этом траектория вычислений содержит число 95 и число 103? 
Траектория вычисления программы – это последовательность результатов выполнения всех команд программы. 
Например, при исходном числе 17 траектория вычислений программы CBA будет состоять из чисел 18, 26, 27.
"""
from sys import *
from functools import lru_cache

ans = set()

@lru_cache(None)
def f(b, e, h = ()):
    if b == e or b == 85 and 95 in h and 103 in h: 
        ans.add(tuple(h))
        return 1
    if b > e : return 0

    a = {1, b%10, int(str(b)[0])} - {0}

    return sum(f(b+i, e, h+[b+i]) for i in a)

print(len(set(f(82, 124, []))))